name: Build & Push Docker Image

on:
  push:
    branches:
      - main
      - "*"
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    env:
      IMAGE_NAME: ${{ github.repository }}
      TEST_MODE: ${{ github.ref != 'refs/heads/main' }}
      REGISTRY: ghcr.io

    steps:
      - name: Set environment variables
        id: env
        run: |
          echo "PUSH=${{ !contains(github.event_name, 'pull_request') && github.ref == 'refs/heads/main' }}" >> $GITHUB_ENV
          echo "LOAD=${{ !contains(github.event_name, 'pull_request') || github.ref != 'refs/heads/main' }}" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Debug
        run: |
          echo "github ref: ${{ github.ref }}"
          echo "github event: ${{ github.event_name }}"
          echo "repository: ${{ github.repository }}"
          echo "test mode: ${{ env.TEST_MODE }}"
          echo ""
          echo "push: ${{ env.PUSH }}"
          echo "load: ${{ env.LOAD }}"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare
        id: prep
        run: |
          REPO=${GITHUB_REPOSITORY,,}
          echo "repository=${REPO}" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        id: push
        with:
          context: .
          push: ${{ env.PUSH }}
          load: ${{ env.LOAD }}
          tags: |
            ghcr.io/${{ steps.prep.outputs.repository }}:latest
            ghcr.io/${{ steps.prep.outputs.repository }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        if: ${{ env.PUSH }}
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
